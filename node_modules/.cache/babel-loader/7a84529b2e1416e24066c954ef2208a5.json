{"ast":null,"code":"var _jsxFileName = \"/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport Navbar from './navbar';\nimport BottomPlayer from './bottom-player';\nimport MainContent from './main-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Root2() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [oldVolume, setOldVolume] = useState(1);\n  const [repeat, setRepeat] = useState(0);\n  const [shuffle, setShuffle] = useState(false);\n  const [paused, setPaused] = useState(true);\n  const audio = useRef(null);\n  useEffect(() => {\n    audio.current.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3';\n    audio.current.addEventListener('timeupdate', () => {\n      setCurrentTime(audio.current.currentTime);\n    });\n    audio.current.addEventListener('durationchange', () => {\n      setDuration(audio.current.duration);\n    });\n  }, []);\n\n  function changeVol(newVol) {\n    audio.current.volume = newVol;\n    setVolume(newVol);\n    setOldVolume(newVol);\n  }\n\n  function toggleMute() {\n    if (volume !== 0) {\n      audio.current.volume = 0;\n      setOldVolume(volume);\n      setVolume(0);\n    } else {\n      audio.current.volume = oldVolume;\n      setVolume(oldVolume);\n    }\n  }\n\n  function changeRepeat() {\n    setRepeat((repeat + 1) % 3);\n  }\n\n  function toggleShuffle() {\n    setShuffle(!shuffle);\n  }\n\n  function togglePause() {\n    if (paused) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n\n    setPaused(!paused);\n  }\n\n  function seek(timeFrac) {\n    const newTime = timeFrac * duration;\n    audio.current.currentTime = newTime;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(BottomPlayer, {\n      albumCover: 'https://picardia.co/static/papes/4b50dbaa-624e-11e7-b2fe-3a6e8f7c670f.jpg',\n      songName: 'Song Name',\n      artistName: 'Artist Name',\n      albumName: 'Album Name',\n      currentTime: currentTime,\n      duration: duration,\n      volume: volume,\n      repeat: repeat,\n      shuffle: shuffle,\n      paused: paused,\n      handleChangeVol: changeVol,\n      handleToggleMute: toggleMute,\n      handleChangeRepeat: changeRepeat,\n      handleToggleShuffle: toggleShuffle,\n      handleTogglePause: togglePause,\n      handleSeek: seek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Root2, \"KVy0Gyi55CfIsKSBbFSYwsa2p+A=\");\n\n_c = Root2;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root2, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 91,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root2\");","map":{"version":3,"sources":["/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx"],"names":["React","useEffect","useRef","useState","ReactDOM","Navbar","BottomPlayer","MainContent","Root2","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","oldVolume","setOldVolume","repeat","setRepeat","shuffle","setShuffle","paused","setPaused","audio","current","src","addEventListener","changeVol","newVol","toggleMute","changeRepeat","toggleShuffle","togglePause","play","pause","seek","timeFrac","newTime","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react'\nimport { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './style.scss'\n\nimport Navbar from './navbar'\nimport BottomPlayer from './bottom-player'\nimport MainContent from './main-content'\n\nfunction Root2 () {\n  const [currentTime, setCurrentTime] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [volume, setVolume] = useState(1)\n  const [oldVolume, setOldVolume] = useState(1)\n  const [repeat, setRepeat] = useState(0)\n  const [shuffle, setShuffle] = useState(false)\n  const [paused, setPaused] = useState(true)\n  const audio = useRef(null)\n\n  useEffect(() => {\n    audio.current.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3'\n    audio.current.addEventListener('timeupdate', () => {\n      setCurrentTime(audio.current.currentTime)\n    })\n    audio.current.addEventListener('durationchange', () => {\n      setDuration(audio.current.duration)\n    })\n  }, [])\n\n  function changeVol (newVol) {\n    audio.current.volume = newVol\n    setVolume(newVol)\n    setOldVolume(newVol)\n  }\n  function toggleMute () {\n    if (volume !== 0) {\n      audio.current.volume = 0\n      setOldVolume(volume)\n      setVolume(0)\n    } else {\n      audio.current.volume = oldVolume\n      setVolume(oldVolume)\n    }\n  }\n  function changeRepeat () {\n    setRepeat((repeat + 1) % 3)\n  }\n  function toggleShuffle () {\n    setShuffle(!shuffle)\n  }\n  function togglePause () {\n    if (paused) {\n      audio.current.play()\n    } else {\n      audio.current.pause()\n    }\n    setPaused(!paused)\n  }\n  function seek (timeFrac) {\n    const newTime = timeFrac * duration\n    audio.current.currentTime = newTime\n  }\n\n  return (<>\n    <audio ref={audio}/>\n    <Navbar/>\n    <BottomPlayer\n      albumCover={'https://picardia.co/static/papes/4b50dbaa-624e-11e7-b2fe-3a6e8f7c670f.jpg'}\n      songName={'Song Name'}\n      artistName={'Artist Name'}\n      albumName={'Album Name'}\n      currentTime={currentTime}\n      duration={duration}\n      volume={volume}\n      repeat={repeat}\n      shuffle={shuffle}\n      paused={paused}\n      handleChangeVol={changeVol}\n      handleToggleMute={toggleMute}\n      handleChangeRepeat={changeRepeat}\n      handleToggleShuffle={toggleShuffle}\n      handleTogglePause={togglePause}\n      handleSeek={seek}\n    />\n    <MainContent/>\n  </>)\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root2/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}