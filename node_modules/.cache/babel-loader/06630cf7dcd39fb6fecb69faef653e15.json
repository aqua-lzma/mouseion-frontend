{"ast":null,"code":"var _jsxFileName = \"/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport Navbar from './navbar';\nimport BottomPlayer from './bottom-player';\nimport MainContent from './main-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Root() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [oldVolume, setOldVolume] = useState(1);\n  const [repeat, setRepeat] = useState(0);\n  const [shuffle, setShuffle] = useState(false);\n  const [paused, setPaused] = useState(true);\n  const audio = useRef(null); // Init event\n\n  useEffect(() => {\n    audio.current.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3';\n    audio.current.addEventListener('timeupdate', () => {\n      setCurrentTime(audio.current.currentTime);\n    });\n    audio.current.addEventListener('durationchange', () => {\n      setDuration(audio.current.duration);\n    });\n  }, []);\n  useEffect(() => {\n    console.log('Audio changed');\n  }, [audio.current]);\n\n  function changeVol(newVol) {\n    audio.current.volume = newVol;\n    setVolume(newVol);\n    setOldVolume(newVol);\n  }\n\n  function toggleMute() {\n    if (volume !== 0) {\n      audio.current.volume = 0;\n      setOldVolume(volume);\n      setVolume(0);\n    } else {\n      audio.current.volume = oldVolume;\n      setVolume(oldVolume);\n    }\n  }\n\n  function changeRepeat() {\n    setRepeat((repeat + 1) % 3);\n  }\n\n  function toggleShuffle() {\n    setShuffle(!shuffle);\n  }\n\n  function togglePause() {\n    if (paused) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n\n    setPaused(!paused);\n  }\n\n  function seek(timeFrac) {\n    const newTime = timeFrac * duration;\n    audio.current.currentTime = newTime;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomPlayer, {\n      albumCover: \"https://picardia.co/static/papes/4b50dbaa-624e-11e7-b2fe-3a6e8f7c670f.jpg\",\n      songName: \"Song Name\",\n      artistName: \"Artist Name\",\n      albumName: \"Album Name\",\n      currentTime: currentTime,\n      duration: duration,\n      volume: volume,\n      repeat: repeat,\n      shuffle: shuffle,\n      paused: paused,\n      handleChangeVol: changeVol,\n      handleToggleMute: toggleMute,\n      handleChangeRepeat: changeRepeat,\n      handleToggleShuffle: toggleShuffle,\n      handleTogglePause: togglePause,\n      handleSeek: seek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Root, \"4xhhFP0QCJZRcTiCJ44p4aUtJ9E=\");\n\n_c = Root;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 97,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx"],"names":["useState","useEffect","useRef","StrictMode","ReactDOM","Navbar","BottomPlayer","MainContent","Root","currentTime","setCurrentTime","duration","setDuration","volume","setVolume","oldVolume","setOldVolume","repeat","setRepeat","shuffle","setShuffle","paused","setPaused","audio","current","src","addEventListener","console","log","changeVol","newVol","toggleMute","changeRepeat","toggleShuffle","togglePause","play","pause","seek","timeFrac","newTime","render","document","getElementById"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,cAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;;AAEA,SAASC,IAAT,GAAiB;AAAA;;AACf,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCV,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACa,MAAD,EAASC,SAAT,IAAsBd,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACe,SAAD,EAAYC,YAAZ,IAA4BhB,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACiB,MAAD,EAASC,SAAT,IAAsBlB,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACmB,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqB,MAAD,EAASC,SAAT,IAAsBtB,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMuB,KAAK,GAAGrB,MAAM,CAAC,IAAD,CAApB,CARe,CAUf;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdsB,IAAAA,KAAK,CAACC,OAAN,CAAcC,GAAd,GAAoB,iFAApB;AACAF,IAAAA,KAAK,CAACC,OAAN,CAAcE,gBAAd,CAA+B,YAA/B,EAA6C,MAAM;AACjDhB,MAAAA,cAAc,CAACa,KAAK,CAACC,OAAN,CAAcf,WAAf,CAAd;AACD,KAFD;AAGAc,IAAAA,KAAK,CAACC,OAAN,CAAcE,gBAAd,CAA+B,gBAA/B,EAAiD,MAAM;AACrDd,MAAAA,WAAW,CAACW,KAAK,CAACC,OAAN,CAAcb,QAAf,CAAX;AACD,KAFD;AAGD,GARQ,EAQN,EARM,CAAT;AAUAV,EAAAA,SAAS,CAAC,MAAM;AACd0B,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACD,GAFQ,EAEN,CAACL,KAAK,CAACC,OAAP,CAFM,CAAT;;AAIA,WAASK,SAAT,CAAoBC,MAApB,EAA4B;AAC1BP,IAAAA,KAAK,CAACC,OAAN,CAAcX,MAAd,GAAuBiB,MAAvB;AACAhB,IAAAA,SAAS,CAACgB,MAAD,CAAT;AACAd,IAAAA,YAAY,CAACc,MAAD,CAAZ;AACD;;AACD,WAASC,UAAT,GAAuB;AACrB,QAAIlB,MAAM,KAAK,CAAf,EAAkB;AAChBU,MAAAA,KAAK,CAACC,OAAN,CAAcX,MAAd,GAAuB,CAAvB;AACAG,MAAAA,YAAY,CAACH,MAAD,CAAZ;AACAC,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD,KAJD,MAIO;AACLS,MAAAA,KAAK,CAACC,OAAN,CAAcX,MAAd,GAAuBE,SAAvB;AACAD,MAAAA,SAAS,CAACC,SAAD,CAAT;AACD;AACF;;AACD,WAASiB,YAAT,GAAyB;AACvBd,IAAAA,SAAS,CAAC,CAACD,MAAM,GAAG,CAAV,IAAe,CAAhB,CAAT;AACD;;AACD,WAASgB,aAAT,GAA0B;AACxBb,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;;AACD,WAASe,WAAT,GAAwB;AACtB,QAAIb,MAAJ,EAAY;AACVE,MAAAA,KAAK,CAACC,OAAN,CAAcW,IAAd;AACD,KAFD,MAEO;AACLZ,MAAAA,KAAK,CAACC,OAAN,CAAcY,KAAd;AACD;;AACDd,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AACD,WAASgB,IAAT,CAAeC,QAAf,EAAyB;AACvB,UAAMC,OAAO,GAAGD,QAAQ,GAAG3B,QAA3B;AACAY,IAAAA,KAAK,CAACC,OAAN,CAAcf,WAAd,GAA4B8B,OAA5B;AACD;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEhB;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AACE,MAAA,UAAU,EAAC,2EADb;AAEE,MAAA,QAAQ,EAAC,WAFX;AAGE,MAAA,UAAU,EAAC,aAHb;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,WAAW,EAAEd,WALf;AAME,MAAA,QAAQ,EAAEE,QANZ;AAOE,MAAA,MAAM,EAAEE,MAPV;AAQE,MAAA,MAAM,EAAEI,MARV;AASE,MAAA,OAAO,EAAEE,OATX;AAUE,MAAA,MAAM,EAAEE,MAVV;AAWE,MAAA,eAAe,EAAEQ,SAXnB;AAYE,MAAA,gBAAgB,EAAEE,UAZpB;AAaE,MAAA,kBAAkB,EAAEC,YAbtB;AAcE,MAAA,mBAAmB,EAAEC,aAdvB;AAeE,MAAA,iBAAiB,EAAEC,WAfrB;AAgBE,MAAA,UAAU,EAAEG;AAhBd;AAAA;AAAA;AAAA;AAAA,YAHF,eAqBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YArBF;AAAA,kBADF;AAyBD;;GApFQ7B,I;;KAAAA,I;AAsFTJ,QAAQ,CAACoC,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import { useState, useEffect, useRef, StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './style.scss'\n\nimport Navbar from './navbar'\nimport BottomPlayer from './bottom-player'\nimport MainContent from './main-content'\n\nfunction Root () {\n  const [currentTime, setCurrentTime] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [volume, setVolume] = useState(1)\n  const [oldVolume, setOldVolume] = useState(1)\n  const [repeat, setRepeat] = useState(0)\n  const [shuffle, setShuffle] = useState(false)\n  const [paused, setPaused] = useState(true)\n  const audio = useRef(null)\n\n  // Init event\n  useEffect(() => {\n    audio.current.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3'\n    audio.current.addEventListener('timeupdate', () => {\n      setCurrentTime(audio.current.currentTime)\n    })\n    audio.current.addEventListener('durationchange', () => {\n      setDuration(audio.current.duration)\n    })\n  }, [])\n\n  useEffect(() => {\n    console.log('Audio changed')\n  }, [audio.current])\n\n  function changeVol (newVol) {\n    audio.current.volume = newVol\n    setVolume(newVol)\n    setOldVolume(newVol)\n  }\n  function toggleMute () {\n    if (volume !== 0) {\n      audio.current.volume = 0\n      setOldVolume(volume)\n      setVolume(0)\n    } else {\n      audio.current.volume = oldVolume\n      setVolume(oldVolume)\n    }\n  }\n  function changeRepeat () {\n    setRepeat((repeat + 1) % 3)\n  }\n  function toggleShuffle () {\n    setShuffle(!shuffle)\n  }\n  function togglePause () {\n    if (paused) {\n      audio.current.play()\n    } else {\n      audio.current.pause()\n    }\n    setPaused(!paused)\n  }\n  function seek (timeFrac) {\n    const newTime = timeFrac * duration\n    audio.current.currentTime = newTime\n  }\n\n  return (\n    <>\n      <audio ref={audio} />\n      <Navbar />\n      <BottomPlayer\n        albumCover='https://picardia.co/static/papes/4b50dbaa-624e-11e7-b2fe-3a6e8f7c670f.jpg'\n        songName='Song Name'\n        artistName='Artist Name'\n        albumName='Album Name'\n        currentTime={currentTime}\n        duration={duration}\n        volume={volume}\n        repeat={repeat}\n        shuffle={shuffle}\n        paused={paused}\n        handleChangeVol={changeVol}\n        handleToggleMute={toggleMute}\n        handleChangeRepeat={changeRepeat}\n        handleToggleShuffle={toggleShuffle}\n        handleTogglePause={togglePause}\n        handleSeek={seek}\n      />\n      <MainContent />\n    </>\n  )\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root />\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}