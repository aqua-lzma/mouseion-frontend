{"ast":null,"code":"var _jsxFileName = \"/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect, useRef, StrictMode } from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport './backgrounds.css';\nimport Navbar from './navbar';\nimport BottomPlayer from './bottom-player';\nimport MainContent from './main-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction formatTime(currentTime, duration) {\n  if (isNaN(currentTime)) currentTime = 0;\n  if (isNaN(duration)) duration = 0;\n  const currentHours = String(Math.floor(currentTime / 3600));\n  const currentSeconds = String(Math.floor(currentTime) % 60).padStart(2, 0);\n  const durationHours = String(Math.floor(duration / 3600));\n  const durationSeconds = String(Math.floor(duration) % 60).padStart(2, 0);\n  let currentMinutes = String(Math.floor(currentTime / 60) % 60);\n  let durationMinutes = String(Math.floor(duration / 60) % 60);\n\n  if (duration >= 600) {\n    currentMinutes = currentMinutes.padStart(2, 0);\n    durationMinutes = durationMinutes.padStart(2, 0);\n  }\n\n  let curStr = `${currentMinutes}:${currentSeconds}`;\n  let durStr = `${durationMinutes}:${durationSeconds}`;\n\n  if (duration >= 3600) {\n    curStr = `${currentHours}:` + curStr;\n    durStr = `${durationHours}:` + durStr;\n  }\n\n  return `${curStr} / ${durStr}`;\n}\n\nfunction Root() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [timeStat, setTimeStat] = useState('');\n  const [volume, setVolume] = useState(1);\n  const [oldVolume, setOldVolume] = useState(1);\n  const [repeat, setRepeat] = useState(0);\n  const [shuffle, setShuffle] = useState(false);\n  const [paused, setPaused] = useState(true);\n  const audio = useRef(); // Init event\n\n  useEffect(() => {\n    // audio.current.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3'\n    audio.current.src = 'https://picardia.co/mouseion/songs/74664af2529421f10bb2bf65237b10d2c3abb61c.mp3';\n    audio.current.addEventListener('timeupdate', () => {\n      setCurrentTime(audio.current.currentTime);\n    });\n    audio.current.addEventListener('durationchange', () => {\n      setDuration(audio.current.duration);\n    });\n    setInterval(() => {\n      setTimeStat(formatTime(Math.round(audio.current.currentTime), audio.current.duration));\n    }, 1000);\n  }, []);\n\n  function changeVol(newVol) {\n    audio.current.volume = newVol;\n    setVolume(newVol);\n    setOldVolume(newVol);\n  }\n\n  function toggleMute() {\n    if (volume !== 0) {\n      audio.current.volume = 0;\n      setOldVolume(volume);\n      setVolume(0);\n    } else {\n      audio.current.volume = oldVolume;\n      setVolume(oldVolume);\n    }\n  }\n\n  function changeRepeat() {\n    setRepeat((repeat + 1) % 3);\n  }\n\n  function toggleShuffle() {\n    setShuffle(!shuffle);\n  }\n\n  function togglePause() {\n    if (paused) {\n      audio.current.play();\n    } else {\n      audio.current.pause();\n    }\n\n    setPaused(!paused);\n  }\n\n  function seek(timeFrac) {\n    const newTime = timeFrac * duration;\n    audio.current.currentTime = newTime;\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"audio\", {\n      ref: audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BottomPlayer, {\n      albumCover: \"https://picardia.co/static/papes/4b50dbaa-624e-11e7-b2fe-3a6e8f7c670f.jpg\",\n      songName: \"Song Name\",\n      artistName: \"Artist Name\",\n      albumName: \"Album Name\",\n      timeStat: timeStat,\n      currentTime: currentTime,\n      duration: duration,\n      volume: volume,\n      repeat: repeat,\n      shuffle: shuffle,\n      paused: paused,\n      handleChangeVol: changeVol,\n      handleToggleMute: toggleMute,\n      handleChangeRepeat: changeRepeat,\n      handleToggleShuffle: toggleShuffle,\n      handleTogglePause: togglePause,\n      handleSeek: seek\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Root, \"cM/T5+WcQVnOV9IgfOo4Krcvaho=\");\n\n_c = Root;\nReactDOM.render( /*#__PURE__*/_jsxDEV(StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 122,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"sources":["/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx"],"names":["useState","useEffect","useRef","StrictMode","ReactDOM","Navbar","BottomPlayer","MainContent","formatTime","currentTime","duration","isNaN","currentHours","String","Math","floor","currentSeconds","padStart","durationHours","durationSeconds","currentMinutes","durationMinutes","curStr","durStr","Root","setCurrentTime","setDuration","timeStat","setTimeStat","volume","setVolume","oldVolume","setOldVolume","repeat","setRepeat","shuffle","setShuffle","paused","setPaused","audio","current","src","addEventListener","setInterval","round","changeVol","newVol","toggleMute","changeRepeat","toggleShuffle","togglePause","play","pause","seek","timeFrac","newTime","render","document","getElementById"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,EAA8BC,MAA9B,EAAsCC,UAAtC,QAAwD,OAAxD;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,cAAP;AACA,OAAO,mBAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;;AAEA,SAASC,UAAT,CAAqBC,WAArB,EAAkCC,QAAlC,EAA4C;AAC1C,MAAIC,KAAK,CAACF,WAAD,CAAT,EAAwBA,WAAW,GAAG,CAAd;AACxB,MAAIE,KAAK,CAACD,QAAD,CAAT,EAAqBA,QAAQ,GAAG,CAAX;AACrB,QAAME,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWN,WAAW,GAAG,IAAzB,CAAD,CAA3B;AACA,QAAMO,cAAc,GAAGH,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWN,WAAX,IAA0B,EAA3B,CAAN,CAAqCQ,QAArC,CAA8C,CAA9C,EAAiD,CAAjD,CAAvB;AACA,QAAMC,aAAa,GAAGL,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAG,IAAtB,CAAD,CAA5B;AACA,QAAMS,eAAe,GAAGN,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWL,QAAX,IAAuB,EAAxB,CAAN,CAAkCO,QAAlC,CAA2C,CAA3C,EAA8C,CAA9C,CAAxB;AACA,MAAIG,cAAc,GAAGP,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWN,WAAW,GAAG,EAAzB,IAA+B,EAAhC,CAA3B;AACA,MAAIY,eAAe,GAAGR,MAAM,CAACC,IAAI,CAACC,KAAL,CAAWL,QAAQ,GAAG,EAAtB,IAA4B,EAA7B,CAA5B;;AACA,MAAIA,QAAQ,IAAI,GAAhB,EAAqB;AACnBU,IAAAA,cAAc,GAAGA,cAAc,CAACH,QAAf,CAAwB,CAAxB,EAA2B,CAA3B,CAAjB;AACAI,IAAAA,eAAe,GAAGA,eAAe,CAACJ,QAAhB,CAAyB,CAAzB,EAA4B,CAA5B,CAAlB;AACD;;AACD,MAAIK,MAAM,GAAI,GAAEF,cAAe,IAAGJ,cAAe,EAAjD;AACA,MAAIO,MAAM,GAAI,GAAEF,eAAgB,IAAGF,eAAgB,EAAnD;;AACA,MAAIT,QAAQ,IAAI,IAAhB,EAAsB;AACpBY,IAAAA,MAAM,GAAI,GAAEV,YAAa,GAAhB,GAAqBU,MAA9B;AACAC,IAAAA,MAAM,GAAI,GAAEL,aAAc,GAAjB,GAAsBK,MAA/B;AACD;;AACD,SAAQ,GAAED,MAAO,MAAKC,MAAO,EAA7B;AACD;;AAED,SAASC,IAAT,GAAiB;AAAA;;AACf,QAAM,CAACf,WAAD,EAAcgB,cAAd,IAAgCzB,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACU,QAAD,EAAWgB,WAAX,IAA0B1B,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAC2B,QAAD,EAAWC,WAAX,IAA0B5B,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAAC6B,MAAD,EAASC,SAAT,IAAsB9B,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAAC+B,SAAD,EAAYC,YAAZ,IAA4BhC,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACiC,MAAD,EAASC,SAAT,IAAsBlC,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACmC,OAAD,EAAUC,UAAV,IAAwBpC,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACqC,MAAD,EAASC,SAAT,IAAsBtC,QAAQ,CAAC,IAAD,CAApC;AACA,QAAMuC,KAAK,GAAGrC,MAAM,EAApB,CATe,CAWf;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACd;AACAsC,IAAAA,KAAK,CAACC,OAAN,CAAcC,GAAd,GAAoB,iFAApB;AACAF,IAAAA,KAAK,CAACC,OAAN,CAAcE,gBAAd,CAA+B,YAA/B,EAA6C,MAAM;AACjDjB,MAAAA,cAAc,CAACc,KAAK,CAACC,OAAN,CAAc/B,WAAf,CAAd;AACD,KAFD;AAGA8B,IAAAA,KAAK,CAACC,OAAN,CAAcE,gBAAd,CAA+B,gBAA/B,EAAiD,MAAM;AACrDhB,MAAAA,WAAW,CAACa,KAAK,CAACC,OAAN,CAAc9B,QAAf,CAAX;AACD,KAFD;AAGAiC,IAAAA,WAAW,CAAC,MAAM;AAChBf,MAAAA,WAAW,CAACpB,UAAU,CAACM,IAAI,CAAC8B,KAAL,CAAWL,KAAK,CAACC,OAAN,CAAc/B,WAAzB,CAAD,EAAwC8B,KAAK,CAACC,OAAN,CAAc9B,QAAtD,CAAX,CAAX;AACD,KAFU,EAER,IAFQ,CAAX;AAGD,GAZQ,EAYN,EAZM,CAAT;;AAcA,WAASmC,SAAT,CAAoBC,MAApB,EAA4B;AAC1BP,IAAAA,KAAK,CAACC,OAAN,CAAcX,MAAd,GAAuBiB,MAAvB;AACAhB,IAAAA,SAAS,CAACgB,MAAD,CAAT;AACAd,IAAAA,YAAY,CAACc,MAAD,CAAZ;AACD;;AACD,WAASC,UAAT,GAAuB;AACrB,QAAIlB,MAAM,KAAK,CAAf,EAAkB;AAChBU,MAAAA,KAAK,CAACC,OAAN,CAAcX,MAAd,GAAuB,CAAvB;AACAG,MAAAA,YAAY,CAACH,MAAD,CAAZ;AACAC,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD,KAJD,MAIO;AACLS,MAAAA,KAAK,CAACC,OAAN,CAAcX,MAAd,GAAuBE,SAAvB;AACAD,MAAAA,SAAS,CAACC,SAAD,CAAT;AACD;AACF;;AACD,WAASiB,YAAT,GAAyB;AACvBd,IAAAA,SAAS,CAAC,CAACD,MAAM,GAAG,CAAV,IAAe,CAAhB,CAAT;AACD;;AACD,WAASgB,aAAT,GAA0B;AACxBb,IAAAA,UAAU,CAAC,CAACD,OAAF,CAAV;AACD;;AACD,WAASe,WAAT,GAAwB;AACtB,QAAIb,MAAJ,EAAY;AACVE,MAAAA,KAAK,CAACC,OAAN,CAAcW,IAAd;AACD,KAFD,MAEO;AACLZ,MAAAA,KAAK,CAACC,OAAN,CAAcY,KAAd;AACD;;AACDd,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACD;;AACD,WAASgB,IAAT,CAAeC,QAAf,EAAyB;AACvB,UAAMC,OAAO,GAAGD,QAAQ,GAAG5C,QAA3B;AACA6B,IAAAA,KAAK,CAACC,OAAN,CAAc/B,WAAd,GAA4B8C,OAA5B;AACD;;AAED,sBACE;AAAA,4BACE;AAAO,MAAA,GAAG,EAAEhB;AAAZ;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE,QAAC,YAAD;AACE,MAAA,UAAU,EAAC,2EADb;AAEE,MAAA,QAAQ,EAAC,WAFX;AAGE,MAAA,UAAU,EAAC,aAHb;AAIE,MAAA,SAAS,EAAC,YAJZ;AAKE,MAAA,QAAQ,EAAEZ,QALZ;AAME,MAAA,WAAW,EAAElB,WANf;AAOE,MAAA,QAAQ,EAAEC,QAPZ;AAQE,MAAA,MAAM,EAAEmB,MARV;AASE,MAAA,MAAM,EAAEI,MATV;AAUE,MAAA,OAAO,EAAEE,OAVX;AAWE,MAAA,MAAM,EAAEE,MAXV;AAYE,MAAA,eAAe,EAAEQ,SAZnB;AAaE,MAAA,gBAAgB,EAAEE,UAbpB;AAcE,MAAA,kBAAkB,EAAEC,YAdtB;AAeE,MAAA,mBAAmB,EAAEC,aAfvB;AAgBE,MAAA,iBAAiB,EAAEC,WAhBrB;AAiBE,MAAA,UAAU,EAAEG;AAjBd;AAAA;AAAA;AAAA;AAAA,YAHF,eAsBE,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA,kBADF;AA0BD;;GAtFQ7B,I;;KAAAA,I;AAwFTpB,QAAQ,CAACoD,MAAT,eACE,QAAC,UAAD;AAAA,yBACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import { useState, useEffect, useRef, StrictMode } from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './style.scss'\nimport './backgrounds.css'\n\nimport Navbar from './navbar'\nimport BottomPlayer from './bottom-player'\nimport MainContent from './main-content'\n\nfunction formatTime (currentTime, duration) {\n  if (isNaN(currentTime)) currentTime = 0\n  if (isNaN(duration)) duration = 0\n  const currentHours = String(Math.floor(currentTime / 3600))\n  const currentSeconds = String(Math.floor(currentTime) % 60).padStart(2, 0)\n  const durationHours = String(Math.floor(duration / 3600))\n  const durationSeconds = String(Math.floor(duration) % 60).padStart(2, 0)\n  let currentMinutes = String(Math.floor(currentTime / 60) % 60)\n  let durationMinutes = String(Math.floor(duration / 60) % 60)\n  if (duration >= 600) {\n    currentMinutes = currentMinutes.padStart(2, 0)\n    durationMinutes = durationMinutes.padStart(2, 0)\n  }\n  let curStr = `${currentMinutes}:${currentSeconds}`\n  let durStr = `${durationMinutes}:${durationSeconds}`\n  if (duration >= 3600) {\n    curStr = `${currentHours}:` + curStr\n    durStr = `${durationHours}:` + durStr\n  }\n  return `${curStr} / ${durStr}`\n}\n\nfunction Root () {\n  const [currentTime, setCurrentTime] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [timeStat, setTimeStat] = useState('')\n  const [volume, setVolume] = useState(1)\n  const [oldVolume, setOldVolume] = useState(1)\n  const [repeat, setRepeat] = useState(0)\n  const [shuffle, setShuffle] = useState(false)\n  const [paused, setPaused] = useState(true)\n  const audio = useRef()\n\n  // Init event\n  useEffect(() => {\n    // audio.current.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3'\n    audio.current.src = 'https://picardia.co/mouseion/songs/74664af2529421f10bb2bf65237b10d2c3abb61c.mp3'\n    audio.current.addEventListener('timeupdate', () => {\n      setCurrentTime(audio.current.currentTime)\n    })\n    audio.current.addEventListener('durationchange', () => {\n      setDuration(audio.current.duration)\n    })\n    setInterval(() => {\n      setTimeStat(formatTime(Math.round(audio.current.currentTime), audio.current.duration))\n    }, 1000)\n  }, [])\n\n  function changeVol (newVol) {\n    audio.current.volume = newVol\n    setVolume(newVol)\n    setOldVolume(newVol)\n  }\n  function toggleMute () {\n    if (volume !== 0) {\n      audio.current.volume = 0\n      setOldVolume(volume)\n      setVolume(0)\n    } else {\n      audio.current.volume = oldVolume\n      setVolume(oldVolume)\n    }\n  }\n  function changeRepeat () {\n    setRepeat((repeat + 1) % 3)\n  }\n  function toggleShuffle () {\n    setShuffle(!shuffle)\n  }\n  function togglePause () {\n    if (paused) {\n      audio.current.play()\n    } else {\n      audio.current.pause()\n    }\n    setPaused(!paused)\n  }\n  function seek (timeFrac) {\n    const newTime = timeFrac * duration\n    audio.current.currentTime = newTime\n  }\n\n  return (\n    <>\n      <audio ref={audio} />\n      <Navbar />\n      <BottomPlayer\n        albumCover='https://picardia.co/static/papes/4b50dbaa-624e-11e7-b2fe-3a6e8f7c670f.jpg'\n        songName='Song Name'\n        artistName='Artist Name'\n        albumName='Album Name'\n        timeStat={timeStat}\n        currentTime={currentTime}\n        duration={duration}\n        volume={volume}\n        repeat={repeat}\n        shuffle={shuffle}\n        paused={paused}\n        handleChangeVol={changeVol}\n        handleToggleMute={toggleMute}\n        handleChangeRepeat={changeRepeat}\n        handleToggleShuffle={toggleShuffle}\n        handleTogglePause={togglePause}\n        handleSeek={seek}\n      />\n      <MainContent />\n    </>\n  )\n}\n\nReactDOM.render(\n  <StrictMode>\n    <Root />\n  </StrictMode>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}