{"ast":null,"code":"var _jsxFileName = \"/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport Navbar from './navbar';\nimport BottomPlayer from './bottom-player';\nimport MainContent from './main-content';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Root extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.changeVol = event => {\n      const newVol = Number(event.target.value) / 1000;\n      this.setState({\n        volume: newVol,\n        oldVolume: newVol\n      }, () => {\n        this.audio.volume = newVol;\n      });\n    };\n\n    this.toggleMute = () => {\n      if (this.state.volume !== 0) {\n        this.setState({\n          volume: 0,\n          oldVolume: this.state.volume\n        }, () => {\n          this.audio.volume = 0;\n        });\n      } else {\n        this.setState({\n          volume: this.state.oldVolume\n        }, () => {\n          this.audio.volume = this.state.oldVolume;\n        });\n      }\n    };\n\n    this.toggleLoop = () => {\n      this.setState({\n        loop: (this.state.loop + 1) % 3\n      });\n    };\n\n    this.toggleShuffle = () => {\n      this.setState({\n        shuffle: !this.state.shuffle\n      });\n    };\n\n    this.togglePause = () => {\n      this.setState({\n        paused: !this.state.paused\n      }, () => {\n        if (this.audio.paused) {\n          this.audio.play();\n        } else {\n          this.audio.pause();\n        }\n      });\n    };\n\n    this.seek = event => {\n      const newTime = Number(event.target.value) / 1000 * this.audio.duration;\n      this.audio.currentTime = newTime;\n    };\n\n    this.audio = new Audio();\n    this.audio.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3';\n    this.audio.addEventListener('timeupdate', () => {\n      this.setState({\n        currentTime: this.audio.currentTime\n      });\n    });\n    this.audio.addEventListener('durationchange', () => {\n      this.setState({\n        duration: this.audio.duration\n      });\n    });\n    this.state = {\n      currentTime: 0,\n      duration: 0,\n      volume: 1,\n      oldVolume: 1,\n      loop: 0,\n      shuffle: false,\n      paused: true\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(BottomPlayer, {\n        currentTime: this.state.currentTime,\n        duration: this.state.duration,\n        volume: this.state.volume,\n        changeVol: this.changeVol,\n        toggleMute: this.toggleMute,\n        loop: this.state.loop,\n        toggleLoop: this.toggleLoop,\n        shuffle: this.state.shuffle,\n        toggleShuffle: this.toggleShuffle,\n        paused: this.state.paused,\n        togglePause: this.togglePause,\n        seek: this.seek\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(MainContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction Root2() {\n  _s();\n\n  const [currentTime, setCurrentTime] = useState(0);\n  const [duration, setDuration] = useState(0);\n  const [volume, setVolume] = useState(1);\n  const [oldVolume, setOldVolume] = useState(1);\n  const [loop, setLoop] = useState(0);\n  const [shuffle, setShuffle] = useState(false);\n  const [pause, setPause] = useState(true);\n  const audio = new Audio();\n  audio.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3';\n  audio.addEventListener('timeupdate', () => {\n    setCurrentTime(audio.currentTime);\n  });\n  audio.addEventListener('durationchange', () => {\n    setDuration(audio.duration);\n  });\n\n  function changeVol(e) {\n    const newVol = Number(e.target.value) / 1000;\n    audio.volume = newVol;\n    setVolume(newVol);\n    setOldVolume(newVol);\n  }\n\n  function toggleMute() {\n    if (volume !== 0) {\n      audio.volume = 0;\n      setOldVolume(volume);\n      setVolume(0);\n    } else {\n      audio.volume = oldVolume;\n      setVolume(oldVolume);\n    }\n  }\n\n  toggleMute = () => {\n    if (this.state.volume !== 0) {\n      this.setState({\n        volume: 0,\n        oldVolume: this.state.volume\n      }, () => {\n        this.audio.volume = 0;\n      });\n    } else {\n      this.setState({\n        volume: this.state.oldVolume\n      }, () => {\n        this.audio.volume = this.state.oldVolume;\n      });\n    }\n  };\n\n  function toggleLoop() {\n    setLoop(!loop);\n  }\n\n  function toggleShuffle() {\n    setShuffle((shuffle + 1) % 3);\n  }\n\n  function togglePause() {\n    setPause(!pause);\n  }\n}\n\n_s(Root2, \"gLoReGGfzNImB4js+rzvT4uCFus=\");\n\n_c = Root2;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(Root, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 151,\n  columnNumber: 3\n}, this), document.getElementById('root'));\n\nvar _c;\n\n$RefreshReg$(_c, \"Root2\");","map":{"version":3,"sources":["/home/aqua/Documents/Programming/mouseion-master/front-end/src/index.jsx"],"names":["React","ReactDOM","Navbar","BottomPlayer","MainContent","Root","Component","constructor","props","changeVol","event","newVol","Number","target","value","setState","volume","oldVolume","audio","toggleMute","state","toggleLoop","loop","toggleShuffle","shuffle","togglePause","paused","play","pause","seek","newTime","duration","currentTime","Audio","src","addEventListener","render","Root2","setCurrentTime","useState","setDuration","setVolume","setOldVolume","setLoop","setShuffle","setPause","e","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAO,cAAP;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,YAAP,MAAyB,iBAAzB;AACA,OAAOC,WAAP,MAAwB,gBAAxB;;;;AAEA,MAAMC,IAAN,SAAmBL,KAAK,CAACM,SAAzB,CAAmC;AACjCC,EAAAA,WAAW,CAAEC,KAAF,EAAS;AAClB,UAAMA,KAAN;;AADkB,SAqBpBC,SArBoB,GAqBPC,KAAD,IAAW;AACrB,YAAMC,MAAM,GAAGC,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAN,GAA6B,IAA5C;AACA,WAAKC,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAEL,MAAV;AAAkBM,QAAAA,SAAS,EAAEN;AAA7B,OAAd,EAAqD,MAAM;AACzD,aAAKO,KAAL,CAAWF,MAAX,GAAoBL,MAApB;AACD,OAFD;AAGD,KA1BmB;;AAAA,SA4BpBQ,UA5BoB,GA4BP,MAAM;AACjB,UAAI,KAAKC,KAAL,CAAWJ,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,aAAKD,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAE,CAAV;AAAaC,UAAAA,SAAS,EAAE,KAAKG,KAAL,CAAWJ;AAAnC,SAAd,EAA2D,MAAM;AAC/D,eAAKE,KAAL,CAAWF,MAAX,GAAoB,CAApB;AACD,SAFD;AAGD,OAJD,MAIO;AACL,aAAKD,QAAL,CAAc;AAAEC,UAAAA,MAAM,EAAE,KAAKI,KAAL,CAAWH;AAArB,SAAd,EAAgD,MAAM;AACpD,eAAKC,KAAL,CAAWF,MAAX,GAAoB,KAAKI,KAAL,CAAWH,SAA/B;AACD,SAFD;AAGD;AACF,KAtCmB;;AAAA,SAwCpBI,UAxCoB,GAwCP,MAAM;AACjB,WAAKN,QAAL,CAAc;AAAEO,QAAAA,IAAI,EAAE,CAAC,KAAKF,KAAL,CAAWE,IAAX,GAAkB,CAAnB,IAAwB;AAAhC,OAAd;AACD,KA1CmB;;AAAA,SA4CpBC,aA5CoB,GA4CJ,MAAM;AACpB,WAAKR,QAAL,CAAc;AAAES,QAAAA,OAAO,EAAE,CAAC,KAAKJ,KAAL,CAAWI;AAAvB,OAAd;AACD,KA9CmB;;AAAA,SAgDpBC,WAhDoB,GAgDN,MAAM;AAClB,WAAKV,QAAL,CAAc;AAAEW,QAAAA,MAAM,EAAE,CAAC,KAAKN,KAAL,CAAWM;AAAtB,OAAd,EAA8C,MAAM;AAClD,YAAI,KAAKR,KAAL,CAAWQ,MAAf,EAAuB;AACrB,eAAKR,KAAL,CAAWS,IAAX;AACD,SAFD,MAEO;AACL,eAAKT,KAAL,CAAWU,KAAX;AACD;AACF,OAND;AAOD,KAxDmB;;AAAA,SA0DpBC,IA1DoB,GA0DZnB,KAAD,IAAW;AAChB,YAAMoB,OAAO,GAAIlB,MAAM,CAACF,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAN,GAA6B,IAA9B,GAAsC,KAAKI,KAAL,CAAWa,QAAjE;AACA,WAAKb,KAAL,CAAWc,WAAX,GAAyBF,OAAzB;AACD,KA7DmB;;AAElB,SAAKZ,KAAL,GAAa,IAAIe,KAAJ,EAAb;AACA,SAAKf,KAAL,CAAWgB,GAAX,GAAiB,iFAAjB;AACA,SAAKhB,KAAL,CAAWiB,gBAAX,CAA4B,YAA5B,EAA0C,MAAM;AAC9C,WAAKpB,QAAL,CAAc;AAAEiB,QAAAA,WAAW,EAAE,KAAKd,KAAL,CAAWc;AAA1B,OAAd;AACD,KAFD;AAGA,SAAKd,KAAL,CAAWiB,gBAAX,CAA4B,gBAA5B,EAA8C,MAAM;AAClD,WAAKpB,QAAL,CAAc;AAAEgB,QAAAA,QAAQ,EAAE,KAAKb,KAAL,CAAWa;AAAvB,OAAd;AACD,KAFD;AAGA,SAAKX,KAAL,GAAa;AACXY,MAAAA,WAAW,EAAE,CADF;AAEXD,MAAAA,QAAQ,EAAE,CAFC;AAGXf,MAAAA,MAAM,EAAE,CAHG;AAIXC,MAAAA,SAAS,EAAE,CAJA;AAKXK,MAAAA,IAAI,EAAE,CALK;AAMXE,MAAAA,OAAO,EAAE,KANE;AAOXE,MAAAA,MAAM,EAAE;AAPG,KAAb;AASD;;AA4CDU,EAAAA,MAAM,GAAI;AAAE,wBAAQ;AAAA,8BAClB,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cADkB,eAElB,QAAC,YAAD;AACE,QAAA,WAAW,EAAE,KAAKhB,KAAL,CAAWY,WAD1B;AAEE,QAAA,QAAQ,EAAE,KAAKZ,KAAL,CAAWW,QAFvB;AAGE,QAAA,MAAM,EAAE,KAAKX,KAAL,CAAWJ,MAHrB;AAIE,QAAA,SAAS,EAAE,KAAKP,SAJlB;AAKE,QAAA,UAAU,EAAE,KAAKU,UALnB;AAME,QAAA,IAAI,EAAE,KAAKC,KAAL,CAAWE,IANnB;AAOE,QAAA,UAAU,EAAE,KAAKD,UAPnB;AAQE,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,OARtB;AASE,QAAA,aAAa,EAAE,KAAKD,aATtB;AAUE,QAAA,MAAM,EAAE,KAAKH,KAAL,CAAWM,MAVrB;AAWE,QAAA,WAAW,EAAE,KAAKD,WAXpB;AAYE,QAAA,IAAI,EAAE,KAAKI;AAZb;AAAA;AAAA;AAAA;AAAA,cAFkB,eAgBlB,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAhBkB;AAAA,oBAAR;AAiBN;;AAjF2B;;AAoFnC,SAASQ,KAAT,GAAkB;AAAA;;AAChB,QAAM,CAACL,WAAD,EAAcM,cAAd,IAAgCC,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACR,QAAD,EAAWS,WAAX,IAA0BD,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAACvB,MAAD,EAASyB,SAAT,IAAsBF,QAAQ,CAAC,CAAD,CAApC;AACA,QAAM,CAACtB,SAAD,EAAYyB,YAAZ,IAA4BH,QAAQ,CAAC,CAAD,CAA1C;AACA,QAAM,CAACjB,IAAD,EAAOqB,OAAP,IAAkBJ,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAM,CAACf,OAAD,EAAUoB,UAAV,IAAwBL,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACX,KAAD,EAAQiB,QAAR,IAAoBN,QAAQ,CAAC,IAAD,CAAlC;AAEA,QAAMrB,KAAK,GAAG,IAAIe,KAAJ,EAAd;AACAf,EAAAA,KAAK,CAACgB,GAAN,GAAY,iFAAZ;AACAhB,EAAAA,KAAK,CAACiB,gBAAN,CAAuB,YAAvB,EAAqC,MAAM;AACzCG,IAAAA,cAAc,CAACpB,KAAK,CAACc,WAAP,CAAd;AACD,GAFD;AAGAd,EAAAA,KAAK,CAACiB,gBAAN,CAAuB,gBAAvB,EAAyC,MAAM;AAC7CK,IAAAA,WAAW,CAACtB,KAAK,CAACa,QAAP,CAAX;AACD,GAFD;;AAIA,WAAStB,SAAT,CAAoBqC,CAApB,EAAuB;AACrB,UAAMnC,MAAM,GAAGC,MAAM,CAACkC,CAAC,CAACjC,MAAF,CAASC,KAAV,CAAN,GAAyB,IAAxC;AACAI,IAAAA,KAAK,CAACF,MAAN,GAAeL,MAAf;AACA8B,IAAAA,SAAS,CAAC9B,MAAD,CAAT;AACA+B,IAAAA,YAAY,CAAC/B,MAAD,CAAZ;AACD;;AACD,WAASQ,UAAT,GAAuB;AACrB,QAAIH,MAAM,KAAK,CAAf,EAAkB;AAChBE,MAAAA,KAAK,CAACF,MAAN,GAAe,CAAf;AACA0B,MAAAA,YAAY,CAAC1B,MAAD,CAAZ;AACAyB,MAAAA,SAAS,CAAC,CAAD,CAAT;AACD,KAJD,MAIO;AACLvB,MAAAA,KAAK,CAACF,MAAN,GAAeC,SAAf;AACAwB,MAAAA,SAAS,CAACxB,SAAD,CAAT;AACD;AACF;;AACDE,EAAAA,UAAU,GAAG,MAAM;AACjB,QAAI,KAAKC,KAAL,CAAWJ,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,WAAKD,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,SAAS,EAAE,KAAKG,KAAL,CAAWJ;AAAnC,OAAd,EAA2D,MAAM;AAC/D,aAAKE,KAAL,CAAWF,MAAX,GAAoB,CAApB;AACD,OAFD;AAGD,KAJD,MAIO;AACL,WAAKD,QAAL,CAAc;AAAEC,QAAAA,MAAM,EAAE,KAAKI,KAAL,CAAWH;AAArB,OAAd,EAAgD,MAAM;AACpD,aAAKC,KAAL,CAAWF,MAAX,GAAoB,KAAKI,KAAL,CAAWH,SAA/B;AACD,OAFD;AAGD;AACF,GAVD;;AAWA,WAASI,UAAT,GAAuB;AACrBsB,IAAAA,OAAO,CAAC,CAACrB,IAAF,CAAP;AACD;;AACD,WAASC,aAAT,GAA0B;AACxBqB,IAAAA,UAAU,CAAC,CAACpB,OAAO,GAAG,CAAX,IAAgB,CAAjB,CAAV;AACD;;AACD,WAASC,WAAT,GAAwB;AACtBoB,IAAAA,QAAQ,CAAC,CAACjB,KAAF,CAAR;AACD;AACF;;GAtDQS,K;;KAAAA,K;AAwDTpC,QAAQ,CAACmC,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEW,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport './style.scss'\n\nimport Navbar from './navbar'\nimport BottomPlayer from './bottom-player'\nimport MainContent from './main-content'\n\nclass Root extends React.Component {\n  constructor (props) {\n    super(props)\n    this.audio = new Audio()\n    this.audio.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3'\n    this.audio.addEventListener('timeupdate', () => {\n      this.setState({ currentTime: this.audio.currentTime })\n    })\n    this.audio.addEventListener('durationchange', () => {\n      this.setState({ duration: this.audio.duration })\n    })\n    this.state = {\n      currentTime: 0,\n      duration: 0,\n      volume: 1,\n      oldVolume: 1,\n      loop: 0,\n      shuffle: false,\n      paused: true\n    }\n  }\n\n  changeVol = (event) => {\n    const newVol = Number(event.target.value) / 1000\n    this.setState({ volume: newVol, oldVolume: newVol }, () => {\n      this.audio.volume = newVol\n    })\n  }\n\n  toggleMute = () => {\n    if (this.state.volume !== 0) {\n      this.setState({ volume: 0, oldVolume: this.state.volume }, () => {\n        this.audio.volume = 0\n      })\n    } else {\n      this.setState({ volume: this.state.oldVolume }, () => {\n        this.audio.volume = this.state.oldVolume\n      })\n    }\n  }\n\n  toggleLoop = () => {\n    this.setState({ loop: (this.state.loop + 1) % 3 })\n  }\n\n  toggleShuffle = () => {\n    this.setState({ shuffle: !this.state.shuffle })\n  }\n\n  togglePause = () => {\n    this.setState({ paused: !this.state.paused }, () => {\n      if (this.audio.paused) {\n        this.audio.play()\n      } else {\n        this.audio.pause()\n      }\n    })\n  }\n\n  seek = (event) => {\n    const newTime = (Number(event.target.value) / 1000) * this.audio.duration\n    this.audio.currentTime = newTime\n  }\n\n  render () { return (<>\n    <Navbar/>\n    <BottomPlayer\n      currentTime={this.state.currentTime}\n      duration={this.state.duration}\n      volume={this.state.volume}\n      changeVol={this.changeVol}\n      toggleMute={this.toggleMute}\n      loop={this.state.loop}\n      toggleLoop={this.toggleLoop}\n      shuffle={this.state.shuffle}\n      toggleShuffle={this.toggleShuffle}\n      paused={this.state.paused}\n      togglePause={this.togglePause}\n      seek={this.seek}\n    />\n    <MainContent/>\n  </>) }\n}\n\nfunction Root2 () {\n  const [currentTime, setCurrentTime] = useState(0)\n  const [duration, setDuration] = useState(0)\n  const [volume, setVolume] = useState(1)\n  const [oldVolume, setOldVolume] = useState(1)\n  const [loop, setLoop] = useState(0)\n  const [shuffle, setShuffle] = useState(false)\n  const [pause, setPause] = useState(true)\n\n  const audio = new Audio()\n  audio.src = 'https://picardia.co/mouseion/songs/f3b7681372e8f95117aef9388590a3942f0bc64d.mp3'\n  audio.addEventListener('timeupdate', () => {\n    setCurrentTime(audio.currentTime)\n  })\n  audio.addEventListener('durationchange', () => {\n    setDuration(audio.duration)\n  })\n\n  function changeVol (e) {\n    const newVol = Number(e.target.value) / 1000\n    audio.volume = newVol\n    setVolume(newVol)\n    setOldVolume(newVol)\n  }\n  function toggleMute () {\n    if (volume !== 0) {\n      audio.volume = 0\n      setOldVolume(volume)\n      setVolume(0)\n    } else {\n      audio.volume = oldVolume\n      setVolume(oldVolume)\n    }\n  }\n  toggleMute = () => {\n    if (this.state.volume !== 0) {\n      this.setState({ volume: 0, oldVolume: this.state.volume }, () => {\n        this.audio.volume = 0\n      })\n    } else {\n      this.setState({ volume: this.state.oldVolume }, () => {\n        this.audio.volume = this.state.oldVolume\n      })\n    }\n  }\n  function toggleLoop () {\n    setLoop(!loop)\n  }\n  function toggleShuffle () {\n    setShuffle((shuffle + 1) % 3)\n  }\n  function togglePause () {\n    setPause(!pause)\n  }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Root/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}